- require 'uri'
- @parts = URI.split(request.original_url)
- @base_url = "#{@parts[0]}://#{@parts[2]}/"
= render 'shared/topbar'

.browse-page class=(session[:browse_view] == 'Map' ? 'map-view' : '')
  section.search-bar
    .row
      .col-xs-10
        .row
          /! alternate input
          .col-xs-3
            .input-group.small-input
              input.form-control.search placeholder="Keyword  e.g. City" type="text" value=session[:browse_search]
          /! .alternate input
          /! dropdown select
          .col-xs-4.price-controls
            span href="/pages/untitled"
              | Price (From)
            input.form-control.min_price.ib placeholder="Any" type="text" value=session[:browse_min_price]
            | &nbsp;&nbsp
            span href="/pages/untitled"
              | Price (To)
            input.form-control.max_price.ib placeholder="Any" type="text" value=session[:browse_max_price]

          .col-xs-2.text-center.no-padding
            .dropdown.small-input
              img alt="" src=asset_path("icon_couch.png")
              button#rooms.dropdown-toggle aria-expanded="true" aria-haspopup="true" data-toggle="dropdown" type="button"
                = "#{session[:browse_beds] ? session[:browse_beds] : 'All'}"
                span.fa.fa-angle-down.pull-right
              ul.dropdown-menu aria-labelledby="rooms"
                li
                  a href="?beds=All"  All
                li
                  a href="?beds=1"  1
                li
                  a href="?beds=2"  2
                li
                  a href="?beds=3"  3
                li
                  a href="?beds=4"  4
                li
                  a href="?beds=>5"  >5

          /! .dropdown select
          /! dropdown select
          .col-xs-2.text-center
            .dropdown.small-input
              img alt="" src=asset_path("icon_bathroom.png")
              button#bathrooms.dropdown-toggle aria-expanded="true" aria-haspopup="true" data-toggle="dropdown" type="button"
                = "#{session[:browse_baths] ? session[:browse_baths] : 'All'}"
                span.fa.fa-angle-down.pull-right
              ul.dropdown-menu aria-labelledby="bathrooms"
                li
                  a href="?baths=All"  All
                li
                  a href="?baths=1"  1
                li
                  a href="?baths=2"  2
                li
                  a href="?baths=3"  3
                li
                  a href="?baths=4"  4
                li
                  a href="?baths=>5"  >5
          /! .dropdown select
          /! more filter
          .col-xs-1
            a.more-filter.modal-filter href="/pages/more_filters"
              img alt="" src=asset_path("icon_filter.png")
      /! .more filter
      .col-xs-2
        - if session[:browse_view] == 'Map'
          a.more-filter.list-view href="?browse_view=List"
            i.fa.fa-list.fa-lg &nbsp;&nbsp;
            span List View
        - else
          a.more-filter.list-view href="?browse_view=Map"
            img alt="" src=asset_path("icon_map_view.png") Map View

  section.listings
    .container.text-center
      .left-panel.map-view class=(session[:browse_view]=='Map' ? '' : 'hidden')
        div#sticky-anchor
        div#map_canvas

      #right-panel.right-panel.text-left
        div class=(session[:browse_view]=='Map' ? 'col-xs-12' : 'col-xs-8 col-xs-offset-2')
          .sort-listings
            p Sort By:
            /! dropdown select
            .dropdown
              button#listing-sort-by.dropdown-toggle aria-expanded="false" aria-haspopup="true" data-toggle="dropdown" type="button"
                | #{session[:browse_sort] ? session[:browse_sort] : "Newest Listings"}
                span.fa.fa-angle-down.pull-right
              ul.dropdown-menu aria-labelledby="listing-sort-by"
                li
                  a href="?sort=Newest Listings"  Newest Listings
                li
                  a href="?sort=Highest Price"  Highest Price
                li
                  a href="?sort=Lowest Price"  Lowest Price
            /! .dropdown select
            - if @properties.size > 0
              p.pull-right Viewing page #{session[:browse_page] ? session[:browse_page] : "1"} of #{number_with_delimiter(@result_count)} Found
            - else
              p.pull-right.invisible Viewing page #{session[:browse_page] ? session[:browse_page] : "1"} of #{number_with_delimiter(@result_count)} Found

        - if @properties.size == 0
          .article
            .col-xs-12
              .listing-box.clearfix.center-block
                .col-xs-6.no-padding
                  .image-box
                    .no-results Nothing found.
                .col-xs-6
                  .listing-box-content
                    h5
                      a href="/pages/untitled" = ""
                    p.listing-price
                      = ""
                      span = ""
                    ul.listing-info.list-unstyled.list-inline.invisible
                      li
                        img alt="" src=asset_path("pt_house_dark.png")
                      li
                        img alt="" src=asset_path("icon_couch_big.png")
                        span = "property.beds"
                      li
                        img alt="" src=asset_path("icon_bathroom_big.png")
                        span = "property.baths"
                      li
                        img alt="" src=asset_path("icon_car_big.png")
                        span = "property.garage"
                    .listing-box-footer
                      p = ""
                      .links.pull-right.invisible
                        a href="/pages/untitled"  Favorite
                        a href="/pages/untitled" Share


        - @properties.each do |property|
          - if lookup_context.find_all('shared/_listing_cell_mv.html.slim').any?
            = render :partial => "shared/listing_cell_mv", :locals => {:property => property}
          - else
            = render :partial => "shared/listing_cell", :locals => {:property => property}

        .row
          .col-xs-8.col-xs-offset-2.text-center
            - if @result_count > 10
              span = will_paginate @properties, :previous_label => '<i class="fa fa-angle-double-left"></i>', :next_label => '<i class="fa fa-angle-double-right"></i>'
            - else
              span.invisible = will_paginate @properties, :previous_label => '<i class="fa fa-angle-double-left"></i>', :next_label => '<i class="fa fa-angle-double-right"></i>'
        .row
          .col-sm-12
            .spacer &nbsp;

= render 'shared/footer'


javascript:
  function gm_initialize() {
    var mapOptions = {
      scrollwheel: false,
      navigationControl: false,
      mapTypeControl: false,
      scaleControl: false,
      draggable: true,
      center: new google.maps.LatLng(26.1333, -80.1500),  //Florida
      zoom: 12
    };
    map = new google.maps.Map(document.getElementById("map_canvas"), mapOptions);
    map.set('styles', [
      {
        "featureType": "water",
        "elementType": "geometry",
        "stylers": [
          {
            "color": "#e9e9e9"
          },
          {
            "lightness": 17
          }
        ]
      },
      {
        "featureType": "landscape",
        "elementType": "geometry",
        "stylers": [
          {
            "color": "#f5f5f5"
          },
          {
            "lightness": 20
          }
        ]
      },
      {
        "featureType": "road.highway",
        "elementType": "geometry.fill",
        "stylers": [
          {
            "color": "#ffffff"
          },
          {
            "lightness": 17
          }
        ]
      },
      {
        "featureType": "road.highway",
        "elementType": "geometry.stroke",
        "stylers": [
          {
            "color": "#ffffff"
          },
          {
            "lightness": 29
          },
          {
            "weight": 0.2
          }
        ]
      },
      {
        "featureType": "road.arterial",
        "elementType": "geometry",
        "stylers": [
          {
            "color": "#ffffff"
          },
          {
            "lightness": 18
          }
        ]
      },
      {
        "featureType": "road.local",
        "elementType": "geometry",
        "stylers": [
          {
            "color": "#ffffff"
          },
          {
            "lightness": 16
          }
        ]
      },
      {
        "featureType": "poi",
        "elementType": "geometry",
        "stylers": [
          {
            "color": "#f5f5f5"
          },
          {
            "lightness": 21
          }
        ]
      },
      {
        "featureType": "poi.park",
        "elementType": "geometry",
        "stylers": [
          {
            "color": "#dedede"
          },
          {
            "lightness": 21
          }
        ]
      },
      {
        "elementType": "labels.text.stroke",
        "stylers": [
          {
            "visibility": "on"
          },
          {
            "color": "#ffffff"
          },
          {
            "lightness": 16
          }
        ]
      },
      {
        "elementType": "labels.text.fill",
        "stylers": [
          {
            "saturation": 36
          },
          {
            "color": "#333333"
          },
          {
            "lightness": 40
          }
        ]
      },
      {
        "elementType": "labels.icon",
        "stylers": [
          {
            "visibility": "off"
          }
        ]
      },
      {
        "featureType": "transit",
        "elementType": "geometry",
        "stylers": [
          {
            "color": "#f2f2f2"
          },
          {
            "lightness": 19
          }
        ]
      },
      {
        "featureType": "administrative",
        "elementType": "geometry.fill",
        "stylers": [
          {
            "color": "#fefefe"
          },
          {
            "lightness": 20
          }
        ]
      },
      {
        "featureType": "administrative",
        "elementType": "geometry.stroke",
        "stylers": [
          {
            "color": "#fefefe"
          },
          {
            "lightness": 17
          },
          {
            "weight": 1.2
          }
        ]
      }
    ]);
  }

  document.addEventListener("DOMContentLoaded", function () {
    gm_initialize();

    var markers = [];

    $(".prop_addr").each(function () {
      pinpoint($(this).text(), $(this).data('listingid'), $(this).data('addr'), $(this).data('price'), $(this).data('beds'),$(this).data('baths'), $(this).data('garage'),$(this).data('date'),$(this).data('sf'));    // draw markers

    });

    setTimeout(function () {
      centerMap();
    }, 1000);

    function centerMap() {
      if (!$("body").hasClass('map-view')) {
        return;   //we have to be in map-view mode
      }
      map_bounds = new google.maps.LatLngBounds();
      $(".prop_addr").each(function () {
        var position = new google.maps.LatLng($(this).data('lat'), $(this).data('lng'));
        //alert(position);
        if (position.lat() != 0 && position.lng != 0)
          map_bounds.extend(position);
      });
      map.fitBounds(map_bounds);
    }

    function pinpoint(address, listingid, addr, price, beds, baths, garage, date, sf) {
      var iconBase = 'https://maps.google.com/mapfiles/kml/shapes/';
      address = address.replace(/\s+/g, ' ').trim();
      var geocoder = new google.maps.Geocoder();
      geocoder.geocode({'address': address}, function (results, status) {
        if (status == google.maps.GeocoderStatus.OK) {
          $('.prop_addr[data-listingid="' + listingid + '"]').data('lat', results[0].geometry.location.lat());
          $('.prop_addr[data-listingid="' + listingid + '"]').data('lng', results[0].geometry.location.lng());
          var m = new google.maps.Marker({
            map: map,
            title: address,
            icon: '#{asset_url("marker.png")}',
            //icon: iconBase + 'placemark_square_highlight.png',
            position: results[0].geometry.location
          })
          var infobox_contents = '<!-- infobox contents of map markers box goes here -->            <div class="infobox-wrapper">                <div id="infobox">                    <div class="listing-box clearfix">                        <div class="col-md-4 no-padding">                            <div class="image-box">                                <img src="http://kasa-staging.s3.amazonaws.com/REPLACEME_LISTING_ID_0.jpg" alt="Image N/A">                            </div>                        </div>                        <div class="col-md-8">                            <div class="listing-box-content">                                <h5 onclick=\'window.location.replace("/pages/listing_details/REPLACEME_LISTING_ID")\'>REPLACEME_ADDRESS</h5>                                <p class="listing-price">                                    REPLACEME_PRICE                                    <span>REPLACEME_SF</span>                                </p>                                <ul class="listing-info list-unstyled list-inline">                                    <li><img src="#{asset_path("pt_house_dark.png")}" alt=""></li>                                    <li><img src="#{asset_path("icon_couch.png")}" alt=""><span>REPLACEME_BEDS</span></li>                                    <li><img src="#{asset_path("icon_bathroom.png")}" alt=""><span>REPLACEME_BATHS</span></li>                                    <li><img src="#{asset_path("icon_car.png")}" alt=""><span>REPLACEME_GARAGE</span></li>                                </ul>                            </div>                        </div>                    </div>                </div>            </div>            <!-- .infobox contents of map markers box goes here -->';
          infobox_contents = infobox_contents.replace(/REPLACEME_LISTING_ID/g, listingid);
          infobox_contents = infobox_contents.replace('REPLACEME_ADDRESS', addr);
          infobox_contents = infobox_contents.replace('REPLACEME_PRICE', price);
          infobox_contents = infobox_contents.replace('REPLACEME_BEDS', beds);
          infobox_contents = infobox_contents.replace('REPLACEME_BATHS', baths);
          infobox_contents = infobox_contents.replace('REPLACEME_GARAGE', garage);
          infobox_contents = infobox_contents.replace('REPLACEME_SF', sf);
          var infowindow = new google.maps.InfoWindow({content: infobox_contents});
          m.addListener('click', function () {
            infowindow.css('visibility', 'hidden');
            infowindow.open(map, m);
          });
          markers.push(m);
        } else {
          console.log('Geocode was not successful: ' + status);
        }
      });
    }
  });
  


